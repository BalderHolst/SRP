source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
library(ggpubr)
library(ggpubr)
library(pubr)
installed.packages()
source("~/Documents/Skole/Gym/SRP/R/plotOptimizedAlgorithms.R", echo=TRUE)
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
#geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
labs(title="To Sorteringsalgoritmer") +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))+
labs(title="To Sorteringsalgoritmer") +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))+
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer",x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title=x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))+
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"), guide = "none")+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = c("forestgreen","orange"))+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
#theme(legend.position="none")
ggsave("toMergesortResidual.png")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
#theme(legend.position="none")
ggsave("toMergesortResidual.png")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
#theme(legend.position="none")
ggsave("toMergesortResidual.png")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
ggsave("toMergesortResidual.png")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
ggsave("toMergesortResidual.png")
source("~/Documents/Skole/Gym/SRP/R/plotOptimizedAlgorithms.R", echo=TRUE)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw()
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
?ggsave
farve =c("forestgreen","orange")
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(x="Log10 af Modellens Forudsigelse", y="residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve =c("forestgreen","#339933")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = farve)+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
farve =c("forestgreen","#333399")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = farve)+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
farve =c("forestgreen","#ffc200")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = farve)+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
farve =c("forestgreen","#ff9b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
scale_color_manual(values = farve)+
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
farve = c("forestgreen","#ff9b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve = c("#bc00b9","#ff9b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve = c("#bc00b9","#e56b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve = c("#3a6ced","#e56b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve = c("#3a6ced","##ffa100")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
farve = c("#3a6ced","#ffa100")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
farve = c("#3a6ced","##ff9b00")
farve = c("#3a6ced","#ff9b00")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
source("~/Documents/Skole/Gym/SRP/R/plotOptimizedAlgorithms.R", echo=TRUE)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw() +
theme(legend.position="none")
source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
?ggsave
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggsave("toAlgoritmer.png",width=8,height=6)
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggsave("toAlgoritmer.png",width=8,height=6,unit= "cm")
ggplot(M, aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()+
theme(legend.position="none")
ggsave("toAlgoritmer.png",width=8,height=6,unit= "cm")
ggsave("toAlgoritmer.png",width=8,height=6)
# laver zoomed
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
geom_line(aes(x=n, y=model,color=Algorithm), size=2, alpha=0.6) +
theme(legend.position = c(.9, .9)) + # virker ikke!!
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggsave("toAlgoritmerZoomed.png",width=9,height=6)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw()+
ggsave("toAlgoritmerResidual.png",width=10,height=5)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw()+
ggsave("toAlgoritmerResidual.png",width=10,height=5)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.1,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw()
ggsave("toAlgoritmerResidual.png",width=10,height=5)
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.2,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
theme_bw()
ggplot(M, aes(x=log10(model), y=residual, colour=Algorithm)) +
geom_hline(yintercept = 0)+
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.2,shape=19) +
labs(title="Residualer") +
facet_wrap(~algorithm,scales="free",ncol=1) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggsave("toAlgoritmerResidual.png",width=10,height=5)
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.08,shape=19) +
geom_line (size=1.5, data=gns) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggplot(subset(M,n <= 100), aes(x=n, y=t, colour=Algorithm)) +
scale_color_manual(values = farve)+
geom_point(size=1.5,alpha=0.08,shape=19) +
geom_line (size=1.5, data=gns) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) + # lav legend alpha 1
theme_bw()
ggsave("toAlgoritmerZoomedGns.png",height=6, width=9)
ggsave("toAlgoritmerZoomedGns.png",height=6, width=10)
ggsave("toAlgoritmerZoomedGns.png",height=5, width=9)
ggsave("toAlgoritmerZoomedGns.png",height=6, width=10)
source("~/Documents/Skole/Gym/SRP/R/plotAlgorithms.R", echo=TRUE)
source("~/Documents/Skole/Gym/SRP/R/plotOptimizedAlgorithms.R", echo=TRUE)
